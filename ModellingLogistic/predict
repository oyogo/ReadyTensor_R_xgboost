#!/usr/bin/env Rscript

library(rjson)
library(data.table)
library(tidyr)

fname_test <- dir(path = "./../ml_vol/inputs/data/testing/binaryClassificationBaseMainInput/", pattern = "\\_test.csv$")
fname_testschema <- dir(path = "./../ml_vol/inputs/data_config/", pattern = "\\_schema.json$")
testdata <- fread(paste0("./../ml_vol/inputs/data/testing/binaryClassificationBaseMainInput/",fname_test))

tdataschema <- fromJSON(file = paste0("./../ml_vol/inputs/data_config/",fname_testschema))

# select the ID column into a variable and drop it from the test data. 
# the variable created will be bound to the predicted probabilities 

idfieldname <- tdataschema$inputDatasets$binaryClassificationBaseMainInput$idField


source("preprocessor.R")

output_vector <- preprocessing(fname_train=fname_test,fname_schema=fname_schema,genericdata=testdata,dataschema=tdataschema)[[2]]
resvar <- preprocessing(fname_train=fname_test,fname_schema=fname_schema,genericdata=testdata,dataschema=tdataschema)[[4]]
testdata_matrix <- preprocessing(fname_train=fname_test,fname_schema=fname_schema,genericdata=testdata,dataschema=tdataschema)[[1]]
test_data <- preprocessing(fname_train=fname_test,fname_schema=fname_schema,genericdata=testdata,dataschema=tdataschema)[[5]]

# load the trained model
xgb_logistic <- readRDS("./../ml_vol/model/artifacts/model.rds")

testing <- function()
{
  df <- testdata_matrix
  predictions <- predict(xgb_logistic, newdata = testdata_matrix , type = "response")
  thepredictions <- cbind(test_data, predictions)
  testdata_preds <- thepredictions[,c(eval(idfieldname),eval(resvar),"predictions")]
  
  testpredictions <- tidyr::pivot_wider(testdata_preds,names_from=eval(resvar),values_from="predictions")
 
  #testpredictions_n <- setDT(testpredictions)[is.na(`1`),`1` := 1-`0`][is.na(`0`),`0` := 1-`1`]
  write.csv(testpredictions,"./../ml_vol/outputs/testing_outputs/testpredictions.csv")

}

testing()
